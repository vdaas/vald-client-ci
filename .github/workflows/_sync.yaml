#
# Copyright (C) 2019-2024 vdaas.org vald team <vald@vdaas.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# You may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
name: Build client
on:
  workflow_call:
    inputs:
      vald_checkout_src_ref:
        description: "Switch branches or restore working tree files to build vald"
        type: string
        default: main
        required: false
      client_checkout_target_ref:
        description: "Switch branches or restore working tree files to build vald"
        type: string
        default: main
        required: false
      enable_tag_push:
        description: "Whether or not to push tag"
        type: boolean
        default: false
        required: false
      client_type:
        type: "string"
        description: "Set client type. e.g) go, python, node, java"
        required: true
env:
  CI_USER: ${{ secrets.CI_USER }}
  CI_TOKEN: ${{ secrets.CI_TOKEN }}
  GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
  IMAGE_TAG: ${{ inputs.vald_checkout_src_ref == 'main' && 'nightly' || inputs.vald_checkout_src_ref }}

jobs:
  sync:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ inputs.client_checkout_target_ref }}
          token: ${{ env.CI_TOKEN }}
      - name: Set Git config
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
      - uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Clone Vald repository
        run: |
          make vald/clone && make VALD_CHECKOUT_REF=${VALD_CHECKOUT_REF} vald/checkout
        env:
          VALD_CHECKOUT_REF: ${{ inputs.vald_checkout_src_ref }}
      - name: Build proto
        run: |
          echo "Install dependencies"
          make ci/deps/install

          echo "Build proto"
          export GOPATH=$HOME/go
          make proto
          make vald/sha/update
          make vald/client/version/update

          echo "Update dependencies"
          make ci/deps/update
      - name: Commit
        run: |
          SHA="$(make vald/sha/print)"

          git remote set-url origin https://${CI_USER}:${CI_TOKEN}@github.com/$GITHUB_REPOSITORY
          git add .
          git commit -S --signoff -m "Update [vald sha: ${SHA}]"
      - name: Deply Vald and Run E2E test
        # TODO: change to the following before main merge.
        # uses: vdaas/vald-client-ci/.github/actions/e2e@main
        uses: vdaas/vald-client-ci/.github/actions/e2e@feat/add-common-workflows
        with:
          client_type: ${{ inputs.client_type }}
          image_tag: ${{ env.IMAGE_TAG }}
      - name: Push
        run: |
          git push origin ${REF}
        env:
          REF: ${{ inputs.client_checkout_target_ref }}
      - name: Create tag
        if: ${{ inputs.enable_tag_push == true }}
        continue-on-error: true
        run: |
          version="$(make vald/client/version/print)"
          git remote set-url origin "https://${CI_USER}:${CI_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          git tag ${version}
          git push origin ${version}
